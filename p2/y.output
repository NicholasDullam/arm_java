Nonterminals useless in grammar

    FormalList
    StaticMethodDecl
    StaticMethodDeclList


Terminals unused in grammar

    KW_IF
    KW_ELSE
    KW_RETURN
    KW_WHILE


State 49 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: MainClass

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    3 VarDecl: Type ID '=' Exp ';'

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type ID ExpDecl VarDeclExpList ';'

    5 StaticVarDeclList: StaticVarDecl StaticVarDeclList
    6                  | ε

    7 VarDeclExpList: ',' ID ExpDecl VarDeclExpList
    8               | ε

    9 Statement: VarDecl
   10          | SYSTEM_OUT_PRINTLN '(' Exp ')' ';'
   11          | SYSTEM_OUT_PRINT '(' Exp ')' ';'

   12 LeftValue: ID
   13          | LeftValue '[' Exp ']'

   14 Index: '[' Exp ']'
   15      | Index '[' Exp ']'

   16 Type: PrimeType
   17     | Type '[' ']'

   18 PrimeType: KW_INT
   19          | KW_BOOLEAN
   20          | KW_STRING

   21 MethodCall: ID '(' ExpList ')'

   22 Exp: INTEGER_LITERAL
   23    | STRING_LITERAL
   24    | KW_TRUE
   25    | KW_FALSE
   26    | '(' Exp ')'
   27    | LeftValue
   28    | LeftValue '.' KW_LENGTH
   29    | MethodCall
   30    | KW_NEW PrimeType Index

   31 ExpDecl: '=' Exp
   32        | ε

   33 ExpList: Exp ExpTail
   34        | Exp
   35        | ε

   36 ExpTail: ',' Exp ExpTail
   37        | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 10 11 21 26
    ')' (41) 2 10 11 21 26
    ',' (44) 7 36
    '.' (46) 28
    ';' (59) 3 4 10 11
    '=' (61) 3 31
    '[' (91) 2 13 14 15 17
    ']' (93) 2 13 14 15 17
    '{' (123) 2
    '}' (125) 2
    error (256)
    KW_BOOLEAN (258) 19
    KW_CLASS (259) 2
    KW_FALSE (260) 25
    KW_INT (261) 18
    MAIN (262) 2
    KW_PUBLIC (263) 2
    KW_TRUE (264) 24
    KW_VOID (265) 2
    KW_IF (266)
    KW_ELSE (267)
    KW_RETURN (268)
    KW_WHILE (269)
    KW_LENGTH (270) 28
    KW_STATIC (271) 2 4
    KW_STRING (272) 2 20
    KW_NEW (273) 30
    KW_PRIVATE (274) 4
    SYSTEM_OUT_PRINT (275) 11
    SYSTEM_OUT_PRINTLN (276) 10
    INTEGER_LITERAL <integer> (277) 22
    STRING_LITERAL <string> (278) 23
    ID <string> (279) 2 3 4 7 12 21


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    Program <node> (36)
        on left: 1
        on right: 0
    MainClass <node> (37)
        on left: 2
        on right: 1
    VarDecl <node> (38)
        on left: 3
        on right: 9
    StaticVarDecl <node> (39)
        on left: 4
        on right: 5
    StaticVarDeclList <node> (40)
        on left: 5 6
        on right: 2 5
    VarDeclExpList <node> (41)
        on left: 7 8
        on right: 4 7
    Statement <node> (42)
        on left: 9 10 11
        on right: 2
    LeftValue <node> (43)
        on left: 12 13
        on right: 13 27 28
    Index <node> (44)
        on left: 14 15
        on right: 15 30
    Type <node> (45)
        on left: 16 17
        on right: 3 4 17
    PrimeType <node> (46)
        on left: 18 19 20
        on right: 16 30
    MethodCall <node> (47)
        on left: 21
        on right: 29
    Exp <node> (48)
        on left: 22 23 24 25 26 27 28 29 30
        on right: 3 10 11 13 14 15 26 31 33 34 36
    ExpDecl <node> (49)
        on left: 31 32
        on right: 4 7
    ExpList <node> (50)
        on left: 33 34 35
        on right: 21
    ExpTail <node> (51)
        on left: 36 37
        on right: 33 36


State 0

    0 $accept: • Program $end

    KW_CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: KW_CLASS • ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    ID  shift, and go to state 4


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass •

    $default  reduce using rule 1 (Program)


State 4

    2 MainClass: KW_CLASS ID • '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    '{'  shift, and go to state 6


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    2 MainClass: KW_CLASS ID '{' • StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    KW_PRIVATE  shift, and go to state 7

    $default  reduce using rule 6 (StaticVarDeclList)

    StaticVarDecl      go to state 8
    StaticVarDeclList  go to state 9


State 7

    4 StaticVarDecl: KW_PRIVATE • KW_STATIC Type ID ExpDecl VarDeclExpList ';'

    KW_STATIC  shift, and go to state 10


State 8

    5 StaticVarDeclList: StaticVarDecl • StaticVarDeclList

    KW_PRIVATE  shift, and go to state 7

    $default  reduce using rule 6 (StaticVarDeclList)

    StaticVarDecl      go to state 8
    StaticVarDeclList  go to state 11


State 9

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList • KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    KW_PUBLIC  shift, and go to state 12


State 10

    4 StaticVarDecl: KW_PRIVATE KW_STATIC • Type ID ExpDecl VarDeclExpList ';'

    KW_BOOLEAN  shift, and go to state 13
    KW_INT      shift, and go to state 14
    KW_STRING   shift, and go to state 15

    Type       go to state 16
    PrimeType  go to state 17


State 11

    5 StaticVarDeclList: StaticVarDecl StaticVarDeclList •

    $default  reduce using rule 5 (StaticVarDeclList)


State 12

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC • KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    KW_STATIC  shift, and go to state 18


State 13

   19 PrimeType: KW_BOOLEAN •

    $default  reduce using rule 19 (PrimeType)


State 14

   18 PrimeType: KW_INT •

    $default  reduce using rule 18 (PrimeType)


State 15

   20 PrimeType: KW_STRING •

    $default  reduce using rule 20 (PrimeType)


State 16

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type • ID ExpDecl VarDeclExpList ';'
   17 Type: Type • '[' ']'

    ID   shift, and go to state 19
    '['  shift, and go to state 20


State 17

   16 Type: PrimeType •

    $default  reduce using rule 16 (Type)


State 18

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC • KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    KW_VOID  shift, and go to state 21


State 19

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type ID • ExpDecl VarDeclExpList ';'

    '='  shift, and go to state 22

    $default  reduce using rule 32 (ExpDecl)

    ExpDecl  go to state 23


State 20

   17 Type: Type '[' • ']'

    ']'  shift, and go to state 24


State 21

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID • MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    MAIN  shift, and go to state 25


State 22

   31 ExpDecl: '=' • Exp

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 35


State 23

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type ID ExpDecl • VarDeclExpList ';'

    ','  shift, and go to state 36

    $default  reduce using rule 8 (VarDeclExpList)

    VarDeclExpList  go to state 37


State 24

   17 Type: Type '[' ']' •

    $default  reduce using rule 17 (Type)


State 25

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN • '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    '('  shift, and go to state 38


State 26

   25 Exp: KW_FALSE •

    $default  reduce using rule 25 (Exp)


State 27

   24 Exp: KW_TRUE •

    $default  reduce using rule 24 (Exp)


State 28

   30 Exp: KW_NEW • PrimeType Index

    KW_BOOLEAN  shift, and go to state 13
    KW_INT      shift, and go to state 14
    KW_STRING   shift, and go to state 15

    PrimeType  go to state 39


State 29

   22 Exp: INTEGER_LITERAL •

    $default  reduce using rule 22 (Exp)


State 30

   23 Exp: STRING_LITERAL •

    $default  reduce using rule 23 (Exp)


State 31

   12 LeftValue: ID •
   21 MethodCall: ID • '(' ExpList ')'

    '('  shift, and go to state 40

    $default  reduce using rule 12 (LeftValue)


State 32

   26 Exp: '(' • Exp ')'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 41


State 33

   13 LeftValue: LeftValue • '[' Exp ']'
   27 Exp: LeftValue •
   28    | LeftValue • '.' KW_LENGTH

    '['  shift, and go to state 42
    '.'  shift, and go to state 43

    $default  reduce using rule 27 (Exp)


State 34

   29 Exp: MethodCall •

    $default  reduce using rule 29 (Exp)


State 35

   31 ExpDecl: '=' Exp •

    $default  reduce using rule 31 (ExpDecl)


State 36

    7 VarDeclExpList: ',' • ID ExpDecl VarDeclExpList

    ID  shift, and go to state 44


State 37

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type ID ExpDecl VarDeclExpList • ';'

    ';'  shift, and go to state 45


State 38

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' • KW_STRING '[' ']' ID ')' '{' Statement '}' '}'

    KW_STRING  shift, and go to state 46


State 39

   30 Exp: KW_NEW PrimeType • Index

    '['  shift, and go to state 47

    Index  go to state 48


State 40

   21 MethodCall: ID '(' • ExpList ')'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    $default  reduce using rule 35 (ExpList)

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 49
    ExpList     go to state 50


State 41

   26 Exp: '(' Exp • ')'

    ')'  shift, and go to state 51


State 42

   13 LeftValue: LeftValue '[' • Exp ']'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 52


State 43

   28 Exp: LeftValue '.' • KW_LENGTH

    KW_LENGTH  shift, and go to state 53


State 44

    7 VarDeclExpList: ',' ID • ExpDecl VarDeclExpList

    '='  shift, and go to state 22

    $default  reduce using rule 32 (ExpDecl)

    ExpDecl  go to state 54


State 45

    4 StaticVarDecl: KW_PRIVATE KW_STATIC Type ID ExpDecl VarDeclExpList ';' •

    $default  reduce using rule 4 (StaticVarDecl)


State 46

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING • '[' ']' ID ')' '{' Statement '}' '}'

    '['  shift, and go to state 55


State 47

   14 Index: '[' • Exp ']'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 56


State 48

   15 Index: Index • '[' Exp ']'
   30 Exp: KW_NEW PrimeType Index •

    '['  shift, and go to state 57

    $default  reduce using rule 30 (Exp)


State 49

   33 ExpList: Exp • ExpTail
   34        | Exp •

    ','  shift, and go to state 58

    ')'       reduce using rule 34 (ExpList)
    ')'       [reduce using rule 37 (ExpTail)]
    $default  reduce using rule 34 (ExpList)

    ExpTail  go to state 59


State 50

   21 MethodCall: ID '(' ExpList • ')'

    ')'  shift, and go to state 60


State 51

   26 Exp: '(' Exp ')' •

    $default  reduce using rule 26 (Exp)


State 52

   13 LeftValue: LeftValue '[' Exp • ']'

    ']'  shift, and go to state 61


State 53

   28 Exp: LeftValue '.' KW_LENGTH •

    $default  reduce using rule 28 (Exp)


State 54

    7 VarDeclExpList: ',' ID ExpDecl • VarDeclExpList

    ','  shift, and go to state 36

    $default  reduce using rule 8 (VarDeclExpList)

    VarDeclExpList  go to state 62


State 55

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' • ']' ID ')' '{' Statement '}' '}'

    ']'  shift, and go to state 63


State 56

   14 Index: '[' Exp • ']'

    ']'  shift, and go to state 64


State 57

   15 Index: Index '[' • Exp ']'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 65


State 58

   36 ExpTail: ',' • Exp ExpTail

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 66


State 59

   33 ExpList: Exp ExpTail •

    $default  reduce using rule 33 (ExpList)


State 60

   21 MethodCall: ID '(' ExpList ')' •

    $default  reduce using rule 21 (MethodCall)


State 61

   13 LeftValue: LeftValue '[' Exp ']' •

    $default  reduce using rule 13 (LeftValue)


State 62

    7 VarDeclExpList: ',' ID ExpDecl VarDeclExpList •

    $default  reduce using rule 7 (VarDeclExpList)


State 63

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' • ID ')' '{' Statement '}' '}'

    ID  shift, and go to state 67


State 64

   14 Index: '[' Exp ']' •

    $default  reduce using rule 14 (Index)


State 65

   15 Index: Index '[' Exp • ']'

    ']'  shift, and go to state 68


State 66

   36 ExpTail: ',' Exp • ExpTail

    ','  shift, and go to state 58

    $default  reduce using rule 37 (ExpTail)

    ExpTail  go to state 69


State 67

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID • ')' '{' Statement '}' '}'

    ')'  shift, and go to state 70


State 68

   15 Index: Index '[' Exp ']' •

    $default  reduce using rule 15 (Index)


State 69

   36 ExpTail: ',' Exp ExpTail •

    $default  reduce using rule 36 (ExpTail)


State 70

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' • '{' Statement '}' '}'

    '{'  shift, and go to state 71


State 71

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' • Statement '}' '}'

    KW_BOOLEAN          shift, and go to state 13
    KW_INT              shift, and go to state 14
    KW_STRING           shift, and go to state 15
    SYSTEM_OUT_PRINT    shift, and go to state 72
    SYSTEM_OUT_PRINTLN  shift, and go to state 73

    VarDecl    go to state 74
    Statement  go to state 75
    Type       go to state 76
    PrimeType  go to state 17


State 72

   11 Statement: SYSTEM_OUT_PRINT • '(' Exp ')' ';'

    '('  shift, and go to state 77


State 73

   10 Statement: SYSTEM_OUT_PRINTLN • '(' Exp ')' ';'

    '('  shift, and go to state 78


State 74

    9 Statement: VarDecl •

    $default  reduce using rule 9 (Statement)


State 75

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement • '}' '}'

    '}'  shift, and go to state 79


State 76

    3 VarDecl: Type • ID '=' Exp ';'
   17 Type: Type • '[' ']'

    ID   shift, and go to state 80
    '['  shift, and go to state 20


State 77

   11 Statement: SYSTEM_OUT_PRINT '(' • Exp ')' ';'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 81


State 78

   10 Statement: SYSTEM_OUT_PRINTLN '(' • Exp ')' ';'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 82


State 79

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' • '}'

    '}'  shift, and go to state 83


State 80

    3 VarDecl: Type ID • '=' Exp ';'

    '='  shift, and go to state 84


State 81

   11 Statement: SYSTEM_OUT_PRINT '(' Exp • ')' ';'

    ')'  shift, and go to state 85


State 82

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp • ')' ';'

    ')'  shift, and go to state 86


State 83

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' Statement '}' '}' •

    $default  reduce using rule 2 (MainClass)


State 84

    3 VarDecl: Type ID '=' • Exp ';'

    KW_FALSE         shift, and go to state 26
    KW_TRUE          shift, and go to state 27
    KW_NEW           shift, and go to state 28
    INTEGER_LITERAL  shift, and go to state 29
    STRING_LITERAL   shift, and go to state 30
    ID               shift, and go to state 31
    '('              shift, and go to state 32

    LeftValue   go to state 33
    MethodCall  go to state 34
    Exp         go to state 87


State 85

   11 Statement: SYSTEM_OUT_PRINT '(' Exp ')' • ';'

    ';'  shift, and go to state 88


State 86

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp ')' • ';'

    ';'  shift, and go to state 89


State 87

    3 VarDecl: Type ID '=' Exp • ';'

    ';'  shift, and go to state 90


State 88

   11 Statement: SYSTEM_OUT_PRINT '(' Exp ')' ';' •

    $default  reduce using rule 11 (Statement)


State 89

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp ')' ';' •

    $default  reduce using rule 10 (Statement)


State 90

    3 VarDecl: Type ID '=' Exp ';' •

    $default  reduce using rule 3 (VarDecl)
