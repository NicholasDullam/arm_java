Terminals unused in grammar

    TOK_AND
    TOK_OR
    TOK_LESS
    TOK_GREAT
    TOK_LEQ
    TOK_GREQ
    TOK_NEQ
    TOK_EQ
    TOK_PLUS
    TOK_MINUS
    TOK_MULT
    TOK_DIV
    KW_IF
    KW_ELSE
    KW_RETURN
    KW_WHILE
    INTEGER_PARSE_INT


Grammar

    0 $accept: Program $end

    1 Program: MainClass

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    3 VarDecl: Type ID ExpDecl VarDeclExpList ';'

    4 StaticVarDecl: KW_PRIVATE KW_STATIC VarDecl

    5 StaticVarDeclList: StaticVarDeclList StaticVarDecl
    6                  | ε

    7 VarDeclExpList: ',' ID ExpDecl VarDeclExpList
    8               | ε

    9 Statement: VarDecl
   10          | SYSTEM_OUT_PRINTLN '(' Exp ')' ';'
   11          | SYSTEM_OUT_PRINT '(' Exp ')' ';'

   12 StatementList: StatementList Statement
   13              | ε

   14 LeftValue: ID
   15          | LeftValue '[' Exp ']'

   16 Index: '[' Exp ']'
   17      | Index '[' Exp ']'

   18 Type: PrimeType
   19     | Type '[' ']'

   20 PrimeType: KW_INT
   21          | KW_BOOLEAN
   22          | KW_STRING

   23 MethodCall: ID '(' ExpList ')'

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList ')' '{' StatementList '}'

   25 StaticMethodDeclList: StaticMethodDeclList StaticMethodDecl
   26                     | ε

   27 FormalList: ArgList Arg
   28           | ε

   29 Arg: Type ID

   30 ArgList: ',' Arg ArgList
   31        | ε

   32 Exp: INTEGER_LITERAL
   33    | STRING_LITERAL
   34    | KW_TRUE
   35    | KW_FALSE
   36    | '(' Exp ')'
   37    | LeftValue
   38    | LeftValue '.' KW_LENGTH
   39    | MethodCall
   40    | KW_NEW PrimeType Index

   41 ExpDecl: '=' Exp
   42        | ε

   43 ExpList: Exp ExpTail
   44        | ε

   45 ExpTail: ',' Exp ExpTail
   46        | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 2 10 11 23 24 36
    ')' (41) 2 10 11 23 24 36
    ',' (44) 7 30 45
    '.' (46) 38
    ';' (59) 3 10 11
    '=' (61) 41
    '[' (91) 2 15 16 17 19
    ']' (93) 2 15 16 17 19
    '{' (123) 2 24
    '}' (125) 2 24
    error (256)
    TOK_AND (258)
    TOK_OR (259)
    TOK_LESS (260)
    TOK_GREAT (261)
    TOK_LEQ (262)
    TOK_GREQ (263)
    TOK_NEQ (264)
    TOK_EQ (265)
    TOK_PLUS (266)
    TOK_MINUS (267)
    TOK_MULT (268)
    TOK_DIV (269)
    KW_BOOLEAN (270) 21
    KW_CLASS (271) 2
    KW_FALSE (272) 35
    KW_INT (273) 20
    MAIN (274) 2
    KW_PUBLIC (275) 2 24
    KW_TRUE (276) 34
    KW_VOID (277) 2
    KW_IF (278)
    KW_ELSE (279)
    KW_RETURN (280)
    KW_WHILE (281)
    KW_LENGTH (282) 38
    KW_STATIC (283) 2 4 24
    KW_STRING (284) 2 22
    KW_NEW (285) 40
    KW_PRIVATE (286) 4
    SYSTEM_OUT_PRINT (287) 11
    SYSTEM_OUT_PRINTLN (288) 10
    INTEGER_PARSE_INT (289)
    INTEGER_LITERAL <integer> (290) 32
    STRING_LITERAL <string> (291) 33
    ID <string> (292) 2 3 7 14 23 24 29


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    Program <node> (49)
        on left: 1
        on right: 0
    MainClass <node> (50)
        on left: 2
        on right: 1
    VarDecl <node> (51)
        on left: 3
        on right: 4 9
    StaticVarDecl <node> (52)
        on left: 4
        on right: 5
    StaticVarDeclList <node> (53)
        on left: 5 6
        on right: 2 5
    VarDeclExpList <node> (54)
        on left: 7 8
        on right: 3 7
    Statement <node> (55)
        on left: 9 10 11
        on right: 12
    StatementList <node> (56)
        on left: 12 13
        on right: 2 12 24
    LeftValue <node> (57)
        on left: 14 15
        on right: 15 37 38
    Index <node> (58)
        on left: 16 17
        on right: 17 40
    Type <node> (59)
        on left: 18 19
        on right: 3 19 24 29
    PrimeType <node> (60)
        on left: 20 21 22
        on right: 18 40
    MethodCall <node> (61)
        on left: 23
        on right: 39
    StaticMethodDecl <node> (62)
        on left: 24
        on right: 25
    StaticMethodDeclList <node> (63)
        on left: 25 26
        on right: 2 25
    FormalList <node> (64)
        on left: 27 28
        on right: 24
    Arg <node> (65)
        on left: 29
        on right: 27 30
    ArgList <node> (66)
        on left: 30 31
        on right: 27 30
    Exp <node> (67)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 10 11 15 16 17 36 41 43 45
    ExpDecl <node> (68)
        on left: 41 42
        on right: 3 7
    ExpList <node> (69)
        on left: 43 44
        on right: 23
    ExpTail <node> (70)
        on left: 45 46
        on right: 43 45


State 0

    0 $accept: • Program $end

    KW_CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: KW_CLASS • ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    ID  shift, and go to state 4


State 2

    0 $accept: Program • $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass •

    $default  reduce using rule 1 (Program)


State 4

    2 MainClass: KW_CLASS ID • '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    '{'  shift, and go to state 6


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    2 MainClass: KW_CLASS ID '{' • StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    $default  reduce using rule 6 (StaticVarDeclList)

    StaticVarDeclList  go to state 7


State 7

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList • StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'
    5 StaticVarDeclList: StaticVarDeclList • StaticVarDecl

    KW_PRIVATE  shift, and go to state 8

    $default  reduce using rule 26 (StaticMethodDeclList)

    StaticVarDecl         go to state 9
    StaticMethodDeclList  go to state 10


State 8

    4 StaticVarDecl: KW_PRIVATE • KW_STATIC VarDecl

    KW_STATIC  shift, and go to state 11


State 9

    5 StaticVarDeclList: StaticVarDeclList StaticVarDecl •

    $default  reduce using rule 5 (StaticVarDeclList)


State 10

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList • KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'
   25 StaticMethodDeclList: StaticMethodDeclList • StaticMethodDecl

    KW_PUBLIC  shift, and go to state 12

    StaticMethodDecl  go to state 13


State 11

    4 StaticVarDecl: KW_PRIVATE KW_STATIC • VarDecl

    KW_BOOLEAN  shift, and go to state 14
    KW_INT      shift, and go to state 15
    KW_STRING   shift, and go to state 16

    VarDecl    go to state 17
    Type       go to state 18
    PrimeType  go to state 19


State 12

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC • KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'
   24 StaticMethodDecl: KW_PUBLIC • KW_STATIC Type ID '(' FormalList ')' '{' StatementList '}'

    KW_STATIC  shift, and go to state 20


State 13

   25 StaticMethodDeclList: StaticMethodDeclList StaticMethodDecl •

    $default  reduce using rule 25 (StaticMethodDeclList)


State 14

   21 PrimeType: KW_BOOLEAN •

    $default  reduce using rule 21 (PrimeType)


State 15

   20 PrimeType: KW_INT •

    $default  reduce using rule 20 (PrimeType)


State 16

   22 PrimeType: KW_STRING •

    $default  reduce using rule 22 (PrimeType)


State 17

    4 StaticVarDecl: KW_PRIVATE KW_STATIC VarDecl •

    $default  reduce using rule 4 (StaticVarDecl)


State 18

    3 VarDecl: Type • ID ExpDecl VarDeclExpList ';'
   19 Type: Type • '[' ']'

    ID   shift, and go to state 21
    '['  shift, and go to state 22


State 19

   18 Type: PrimeType •

    $default  reduce using rule 18 (Type)


State 20

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC • KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'
   24 StaticMethodDecl: KW_PUBLIC KW_STATIC • Type ID '(' FormalList ')' '{' StatementList '}'

    KW_BOOLEAN  shift, and go to state 14
    KW_INT      shift, and go to state 15
    KW_VOID     shift, and go to state 23
    KW_STRING   shift, and go to state 16

    Type       go to state 24
    PrimeType  go to state 19


State 21

    3 VarDecl: Type ID • ExpDecl VarDeclExpList ';'

    '='  shift, and go to state 25

    $default  reduce using rule 42 (ExpDecl)

    ExpDecl  go to state 26


State 22

   19 Type: Type '[' • ']'

    ']'  shift, and go to state 27


State 23

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID • MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    MAIN  shift, and go to state 28


State 24

   19 Type: Type • '[' ']'
   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type • ID '(' FormalList ')' '{' StatementList '}'

    ID   shift, and go to state 29
    '['  shift, and go to state 22


State 25

   41 ExpDecl: '=' • Exp

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 39


State 26

    3 VarDecl: Type ID ExpDecl • VarDeclExpList ';'

    ','  shift, and go to state 40

    $default  reduce using rule 8 (VarDeclExpList)

    VarDeclExpList  go to state 41


State 27

   19 Type: Type '[' ']' •

    $default  reduce using rule 19 (Type)


State 28

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN • '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    '('  shift, and go to state 42


State 29

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID • '(' FormalList ')' '{' StatementList '}'

    '('  shift, and go to state 43


State 30

   35 Exp: KW_FALSE •

    $default  reduce using rule 35 (Exp)


State 31

   34 Exp: KW_TRUE •

    $default  reduce using rule 34 (Exp)


State 32

   40 Exp: KW_NEW • PrimeType Index

    KW_BOOLEAN  shift, and go to state 14
    KW_INT      shift, and go to state 15
    KW_STRING   shift, and go to state 16

    PrimeType  go to state 44


State 33

   32 Exp: INTEGER_LITERAL •

    $default  reduce using rule 32 (Exp)


State 34

   33 Exp: STRING_LITERAL •

    $default  reduce using rule 33 (Exp)


State 35

   14 LeftValue: ID •
   23 MethodCall: ID • '(' ExpList ')'

    '('  shift, and go to state 45

    $default  reduce using rule 14 (LeftValue)


State 36

   36 Exp: '(' • Exp ')'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 46


State 37

   15 LeftValue: LeftValue • '[' Exp ']'
   37 Exp: LeftValue •
   38    | LeftValue • '.' KW_LENGTH

    '['  shift, and go to state 47
    '.'  shift, and go to state 48

    $default  reduce using rule 37 (Exp)


State 38

   39 Exp: MethodCall •

    $default  reduce using rule 39 (Exp)


State 39

   41 ExpDecl: '=' Exp •

    $default  reduce using rule 41 (ExpDecl)


State 40

    7 VarDeclExpList: ',' • ID ExpDecl VarDeclExpList

    ID  shift, and go to state 49


State 41

    3 VarDecl: Type ID ExpDecl VarDeclExpList • ';'

    ';'  shift, and go to state 50


State 42

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' • KW_STRING '[' ']' ID ')' '{' StatementList '}' '}'

    KW_STRING  shift, and go to state 51


State 43

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' • FormalList ')' '{' StatementList '}'

    ','  shift, and go to state 52

    ')'       reduce using rule 28 (FormalList)
    $default  reduce using rule 31 (ArgList)

    FormalList  go to state 53
    ArgList     go to state 54


State 44

   40 Exp: KW_NEW PrimeType • Index

    '['  shift, and go to state 55

    Index  go to state 56


State 45

   23 MethodCall: ID '(' • ExpList ')'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    $default  reduce using rule 44 (ExpList)

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 57
    ExpList     go to state 58


State 46

   36 Exp: '(' Exp • ')'

    ')'  shift, and go to state 59


State 47

   15 LeftValue: LeftValue '[' • Exp ']'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 60


State 48

   38 Exp: LeftValue '.' • KW_LENGTH

    KW_LENGTH  shift, and go to state 61


State 49

    7 VarDeclExpList: ',' ID • ExpDecl VarDeclExpList

    '='  shift, and go to state 25

    $default  reduce using rule 42 (ExpDecl)

    ExpDecl  go to state 62


State 50

    3 VarDecl: Type ID ExpDecl VarDeclExpList ';' •

    $default  reduce using rule 3 (VarDecl)


State 51

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING • '[' ']' ID ')' '{' StatementList '}' '}'

    '['  shift, and go to state 63


State 52

   30 ArgList: ',' • Arg ArgList

    KW_BOOLEAN  shift, and go to state 14
    KW_INT      shift, and go to state 15
    KW_STRING   shift, and go to state 16

    Type       go to state 64
    PrimeType  go to state 19
    Arg        go to state 65


State 53

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList • ')' '{' StatementList '}'

    ')'  shift, and go to state 66


State 54

   27 FormalList: ArgList • Arg

    KW_BOOLEAN  shift, and go to state 14
    KW_INT      shift, and go to state 15
    KW_STRING   shift, and go to state 16

    Type       go to state 64
    PrimeType  go to state 19
    Arg        go to state 67


State 55

   16 Index: '[' • Exp ']'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 68


State 56

   17 Index: Index • '[' Exp ']'
   40 Exp: KW_NEW PrimeType Index •

    '['  shift, and go to state 69

    $default  reduce using rule 40 (Exp)


State 57

   43 ExpList: Exp • ExpTail

    ','  shift, and go to state 70

    $default  reduce using rule 46 (ExpTail)

    ExpTail  go to state 71


State 58

   23 MethodCall: ID '(' ExpList • ')'

    ')'  shift, and go to state 72


State 59

   36 Exp: '(' Exp ')' •

    $default  reduce using rule 36 (Exp)


State 60

   15 LeftValue: LeftValue '[' Exp • ']'

    ']'  shift, and go to state 73


State 61

   38 Exp: LeftValue '.' KW_LENGTH •

    $default  reduce using rule 38 (Exp)


State 62

    7 VarDeclExpList: ',' ID ExpDecl • VarDeclExpList

    ','  shift, and go to state 40

    $default  reduce using rule 8 (VarDeclExpList)

    VarDeclExpList  go to state 74


State 63

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' • ']' ID ')' '{' StatementList '}' '}'

    ']'  shift, and go to state 75


State 64

   19 Type: Type • '[' ']'
   29 Arg: Type • ID

    ID   shift, and go to state 76
    '['  shift, and go to state 22


State 65

   30 ArgList: ',' Arg • ArgList

    ','  shift, and go to state 52

    $default  reduce using rule 31 (ArgList)

    ArgList  go to state 77


State 66

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList ')' • '{' StatementList '}'

    '{'  shift, and go to state 78


State 67

   27 FormalList: ArgList Arg •

    $default  reduce using rule 27 (FormalList)


State 68

   16 Index: '[' Exp • ']'

    ']'  shift, and go to state 79


State 69

   17 Index: Index '[' • Exp ']'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 80


State 70

   45 ExpTail: ',' • Exp ExpTail

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 81


State 71

   43 ExpList: Exp ExpTail •

    $default  reduce using rule 43 (ExpList)


State 72

   23 MethodCall: ID '(' ExpList ')' •

    $default  reduce using rule 23 (MethodCall)


State 73

   15 LeftValue: LeftValue '[' Exp ']' •

    $default  reduce using rule 15 (LeftValue)


State 74

    7 VarDeclExpList: ',' ID ExpDecl VarDeclExpList •

    $default  reduce using rule 7 (VarDeclExpList)


State 75

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' • ID ')' '{' StatementList '}' '}'

    ID  shift, and go to state 82


State 76

   29 Arg: Type ID •

    $default  reduce using rule 29 (Arg)


State 77

   30 ArgList: ',' Arg ArgList •

    $default  reduce using rule 30 (ArgList)


State 78

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList ')' '{' • StatementList '}'

    $default  reduce using rule 13 (StatementList)

    StatementList  go to state 83


State 79

   16 Index: '[' Exp ']' •

    $default  reduce using rule 16 (Index)


State 80

   17 Index: Index '[' Exp • ']'

    ']'  shift, and go to state 84


State 81

   45 ExpTail: ',' Exp • ExpTail

    ','  shift, and go to state 70

    $default  reduce using rule 46 (ExpTail)

    ExpTail  go to state 85


State 82

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID • ')' '{' StatementList '}' '}'

    ')'  shift, and go to state 86


State 83

   12 StatementList: StatementList • Statement
   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList ')' '{' StatementList • '}'

    KW_BOOLEAN          shift, and go to state 14
    KW_INT              shift, and go to state 15
    KW_STRING           shift, and go to state 16
    SYSTEM_OUT_PRINT    shift, and go to state 87
    SYSTEM_OUT_PRINTLN  shift, and go to state 88
    '}'                 shift, and go to state 89

    VarDecl    go to state 90
    Statement  go to state 91
    Type       go to state 18
    PrimeType  go to state 19


State 84

   17 Index: Index '[' Exp ']' •

    $default  reduce using rule 17 (Index)


State 85

   45 ExpTail: ',' Exp ExpTail •

    $default  reduce using rule 45 (ExpTail)


State 86

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' • '{' StatementList '}' '}'

    '{'  shift, and go to state 92


State 87

   11 Statement: SYSTEM_OUT_PRINT • '(' Exp ')' ';'

    '('  shift, and go to state 93


State 88

   10 Statement: SYSTEM_OUT_PRINTLN • '(' Exp ')' ';'

    '('  shift, and go to state 94


State 89

   24 StaticMethodDecl: KW_PUBLIC KW_STATIC Type ID '(' FormalList ')' '{' StatementList '}' •

    $default  reduce using rule 24 (StaticMethodDecl)


State 90

    9 Statement: VarDecl •

    $default  reduce using rule 9 (Statement)


State 91

   12 StatementList: StatementList Statement •

    $default  reduce using rule 12 (StatementList)


State 92

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' • StatementList '}' '}'

    $default  reduce using rule 13 (StatementList)

    StatementList  go to state 95


State 93

   11 Statement: SYSTEM_OUT_PRINT '(' • Exp ')' ';'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 96


State 94

   10 Statement: SYSTEM_OUT_PRINTLN '(' • Exp ')' ';'

    KW_FALSE         shift, and go to state 30
    KW_TRUE          shift, and go to state 31
    KW_NEW           shift, and go to state 32
    INTEGER_LITERAL  shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    ID               shift, and go to state 35
    '('              shift, and go to state 36

    LeftValue   go to state 37
    MethodCall  go to state 38
    Exp         go to state 97


State 95

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList • '}' '}'
   12 StatementList: StatementList • Statement

    KW_BOOLEAN          shift, and go to state 14
    KW_INT              shift, and go to state 15
    KW_STRING           shift, and go to state 16
    SYSTEM_OUT_PRINT    shift, and go to state 87
    SYSTEM_OUT_PRINTLN  shift, and go to state 88
    '}'                 shift, and go to state 98

    VarDecl    go to state 90
    Statement  go to state 91
    Type       go to state 18
    PrimeType  go to state 19


State 96

   11 Statement: SYSTEM_OUT_PRINT '(' Exp • ')' ';'

    ')'  shift, and go to state 99


State 97

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp • ')' ';'

    ')'  shift, and go to state 100


State 98

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' • '}'

    '}'  shift, and go to state 101


State 99

   11 Statement: SYSTEM_OUT_PRINT '(' Exp ')' • ';'

    ';'  shift, and go to state 102


State 100

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp ')' • ';'

    ';'  shift, and go to state 103


State 101

    2 MainClass: KW_CLASS ID '{' StaticVarDeclList StaticMethodDeclList KW_PUBLIC KW_STATIC KW_VOID MAIN '(' KW_STRING '[' ']' ID ')' '{' StatementList '}' '}' •

    $default  reduce using rule 2 (MainClass)


State 102

   11 Statement: SYSTEM_OUT_PRINT '(' Exp ')' ';' •

    $default  reduce using rule 11 (Statement)


State 103

   10 Statement: SYSTEM_OUT_PRINTLN '(' Exp ')' ';' •

    $default  reduce using rule 10 (Statement)
