@TODO figure out why expression not accepting IDs

Program -> MainClass
FOLLOW(Program) = { $ }

MainClass -> class id { public static void main ( String [] id ) { StatementList }}
FOLLOW(MainClass) = { $ }

StatementList -> Statement StatementList
              -> epsilon
FOLLOW(StatementList) = { "}" }

Statement -> VarDecl
          -> { StatementList }
          -> if ( Exp ) Statement else Statement
          -> while ( Exp ) Statement
          -> System.out.println ( Exp ) ;
          -> System.out.print ( Exp ) ;
          -> LeftValue = Exp ;
          -> return Exp ;
FOLLOW(Statement) = { else, FIRST(StatementList), FOLLOW(StatementList) } = { int, boolean, String, "{", if, while, System.out.println,
                                                System.out.print, id, return, "}" }

Exp -> ExpPrefix ExpTail
FOLLOW(Exp) = { ), FOLLOW(ExpDecl) } = { ), ",", ; }

ExpPrefix -> ( Exp )
          -> LeftValue ExpLength
          -> INTEGER_LITERAL
          -> STRING_LITERAL
          -> true
          -> false
          -> new PrimeType Index
FOLLOW(ExpPrefix) = { FIRST(ExpTail), FOLLOW(ExpTail) } = { ), ",", ;, &&, ||, <, >, <=, >=, !=, ==, +, -, *, / }

ExpTail -> op ExpPrefix ExpTail
        -> epsilon
FOLLOW(ExpTail) = { FOLLOW(Exp) } = { ), ",", ; }

ExpDecl -> = Exp
        -> epsilon
FOLLOW(ExpDecl) = { FIRST(ExpList), FOLLOW(ExpList) } = { ",", ; }

ExpList -> , id ExpDec ExpList
        -> epsilon
FOLLOW(ExpList) = { ; }    

ExpLength -> . length
          -> epsilon
FOLLOW(ExpLength) = { FOLLOW(ExpPrefix) } = { ), ",", ;, &&, ||, <, >, <=, >=, !=, ==, +, -, *, / }

VarDecl -> Type id ExpDecl ExpList ;
FOLLOW(VarDecl) = { FOLLOW(Statement) } = { int, boolean, String, "{", if, while, System.out.println,
                                                System.out.print, id, return, "}" }

PrimeType -> int
          -> boolean
          -> String
FOLLOW(PrimeType) = { FIRST(Index), FIRST(TypeTail) } = { [, int, boolean, String }

TypeTail -> PrimeType TypeTail
         -> [ ]
         -> epsilon
FOLLOW(TypeTail) = { FOLLOW(Type) } = { id }

Type -> PrimeType TypeTail
FOLLOW(Type) = { id }

IndexTail -> [ Exp ] IndexTail
          -> epsilon
FOLLOW(IndexTail) = { FOLLOW(Index) } = { ), ",", ;, &&, ||, <, >, <=, >=, !=, ==, +, -, *, / }

Index -> [ Exp ] IndexTail
FOLLOW(Index) = { FOLLOW(ExpPrefix) } = { ), ",", ;, &&, ||, <, >, <=, >=, !=, ==, +, -, *, / }

LeftValueTail -> [ Exp ] LeftValueTail
              -> epsilon
FOLLOW(LeftValueTail) = { FOLLOW(LeftValue) } = { =, ., ",", ;, ), &&, ||, <, >, <=, >=, !=, ==, +, -, *, / } 

LeftValue -> id LeftValueTail
FOLLOW(LeftValue) = { =, FIRST(ExpLength), FOLLOW(ExpLength) } = { =, ., ",", ;, ), &&, ||, <, >, <=, >=, !=, ==, +, -, *, / } 